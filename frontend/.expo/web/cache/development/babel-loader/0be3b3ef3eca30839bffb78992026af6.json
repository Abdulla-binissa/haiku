{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\adula\\\\Documents\\\\GitHub\\\\haiku\\\\frontend\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions/index\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nvar Tab = createMaterialBottomTabNavigator();\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFollowing();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.reload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"magnify\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["C:/Users/adula/Documents/GitHub/haiku/frontend/components/Main.js"],"names":["React","Component","firebase","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","createMaterialBottomTabNavigator","FeedScreen","ProfileScreen","SearchScreen","MaterialCommunityIcons","EmptyScreen","Tab","Main","props","reload","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","uid","auth","currentUser","mapStateToProps","store","userState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text } from 'react-native'\r\n\r\nimport firebase from 'firebase'\r\n\r\nimport { connect } from 'react-redux' \r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from '../redux/actions/index' \r\n\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\n\r\nimport FeedScreen from './main/Feed'\r\nimport ProfileScreen from './main/Profile'\r\nimport SearchScreen from './main/Search'\r\n\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nconst EmptyScreen = ()=> {return(null)}\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nexport class Main extends Component {\r\n    componentDidMount(){\r\n        this.props.clearData()\r\n        this.props.fetchUser()\r\n        this.props.fetchUserPosts()\r\n        this.props.fetchUserFollowing()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tab.Navigator initialRouteName=\"Feed\" labeled={false} >\r\n                <Tab.Screen name=\"Feed\" component={FeedScreen} \r\n                    options = {{\r\n                        tabBarIcon: ({ color, size })=> (\r\n                            <MaterialCommunityIcons name=\"home\" color={color} size={26}/>\r\n                        )\r\n                    }}\r\n                />\r\n                <Tab.Screen name=\"Search\" component={SearchScreen} navigation={this.props.navigation}\r\n                    options = {{\r\n                        tabBarIcon: ({ color, size })=> (\r\n                            <MaterialCommunityIcons name=\"magnify\" color={color} size={26}/>\r\n                        )\r\n                    }}\r\n                />\r\n                <Tab.Screen name=\"AddContainer\" component={EmptyScreen} \r\n                    listeners={ ({ navigation })=> ({\r\n                            tabPress: event=> {\r\n                                event.preventDefault()\r\n                                navigation.navigate(\"Add\")\r\n                            }\r\n                        }) \r\n                    }\r\n                    options = {{\r\n                        tabBarIcon: ({ color, size })=> (\r\n                            <MaterialCommunityIcons name=\"plus-box\" color={color} size={26}/>\r\n                        )\r\n                    }}\r\n                />\r\n                <Tab.Screen name=\"Profile\" component={ProfileScreen} \r\n                    listeners={ ({ navigation })=> ({\r\n                        tabPress: event=> {\r\n                            event.preventDefault()\r\n                            navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})\r\n                        }\r\n                    })}\r\n                    options = {{\r\n                        tabBarIcon: ({ color, size })=> (\r\n                            <MaterialCommunityIcons name=\"account-circle\" color={color} size={26}/>\r\n                        )\r\n                    }}\r\n                />\r\n            </Tab.Navigator>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store)=> ({ currentUser: store.userState.currentUser })\r\nconst mapDispatchToProps = (dispatch)=> bindActionCreators({ fetchUser, fetchUserPosts, fetchUserFollowing, clearData }, dispatch )\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(Main)\r\n"]},"metadata":{},"sourceType":"module"}