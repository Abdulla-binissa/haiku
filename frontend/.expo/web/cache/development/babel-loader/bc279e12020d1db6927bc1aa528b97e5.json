{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\adula\\\\Documents\\\\GitHub\\\\haiku\\\\frontend\\\\components\\\\auth\\\\Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as firebase from 'firebase';\nexport var Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: '',\n      email: '',\n      password: ''\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n          name: name,\n          email: email\n        });\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"name\",\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.onSignUp();\n        },\n        title: \"Sign Up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\nexport default Register;","map":{"version":3,"sources":["C:/Users/adula/Documents/GitHub/haiku/frontend/components/auth/Register.js"],"names":["React","Component","firebase","Register","props","state","name","email","password","onSignUp","bind","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","console","log","catch","error","setState"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,WAAaC,QAAb;AAAA;;AAAA;;AACI,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAMA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AATc;AAUjB;;AAXL;AAAA;AAAA,+BAac;AAAA,wBAC4B,KAAKL,KADjC;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,KADR,eACQA,KADR;AAAA,UACeC,QADf,eACeA,QADf;AAENN,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAAgDL,KAAhD,EAAuDC,QAAvD,EACCK,IADD,CACO,UAACC,MAAD,EAAW;AACdZ,QAAAA,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EACKC,GADL,CACSf,QAAQ,CAACS,IAAT,GAAgBO,WAAhB,CAA4BC,GADrC,EAEKC,GAFL,CAES;AACDd,UAAAA,IAAI,EAAJA,IADC;AAEDC,UAAAA,KAAK,EAALA;AAFC,SAFT;AAMAc,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACH,OATD,EAUCS,KAVD,CAUQ,UAACC,KAAD,EAAU;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OAZD;AAaH;AA5BL;AAAA;AAAA,6BA8Ba;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,MADhB;AAEI,QAAA,YAAY,EAAG,sBAAClB,IAAD;AAAA,iBAAS,MAAI,CAACmB,QAAL,CAAc;AAAEnB,YAAAA,IAAI,EAAJA;AAAF,WAAd,CAAT;AAAA,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,OADhB;AAEI,QAAA,YAAY,EAAG,sBAACC,KAAD;AAAA,iBAAU,MAAI,CAACkB,QAAL,CAAc;AAAElB,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAV;AAAA,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EASI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,eAAe,EAAG,IAFtB;AAGI,QAAA,YAAY,EAAG,sBAACC,QAAD;AAAA,iBAAa,MAAI,CAACiB,QAAL,CAAc;AAAEjB,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAb;AAAA,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAeI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAG;AAAA,iBAAK,MAAI,CAACC,QAAL,EAAL;AAAA,SADd;AAEI,QAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADJ;AAsBH;AArDL;;AAAA;AAAA,EAA8BR,SAA9B;AAwDA,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Button, TextInput } from 'react-native'\r\nimport * as firebase from 'firebase'\r\n\r\nexport class Register extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n    }\r\n\r\n    onSignUp(){\r\n        const { name, email, password } = this.state;\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n        .then( (result)=> {\r\n            firebase.firestore().collection(\"users\")\r\n                .doc(firebase.auth().currentUser.uid)\r\n                .set({\r\n                    name,\r\n                    email\r\n                })\r\n            console.log(result)\r\n        })\r\n        .catch( (error)=> {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <TextInput\r\n                    placeholder=\"name\"\r\n                    onChangeText={ (name)=> this.setState({ name }) }\r\n                />\r\n                <TextInput\r\n                    placeholder=\"email\"\r\n                    onChangeText={ (email)=> this.setState({ email }) }\r\n                />\r\n                <TextInput\r\n                    placeholder=\"password\"\r\n                    secureTextEntry={ true }\r\n                    onChangeText={ (password)=> this.setState({ password }) }\r\n                />\r\n\r\n                <Button \r\n                    onPress={ ()=> this.onSignUp() }\r\n                    title=\"Sign Up\"\r\n                />\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}