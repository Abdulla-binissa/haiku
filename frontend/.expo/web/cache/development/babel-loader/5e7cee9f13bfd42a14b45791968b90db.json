{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\adula\\\\Documents\\\\GitHub\\\\haiku\\\\frontend\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as firebase from 'firebase';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nimport CommentScreen from \"./components/main/Comment\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCQ8_8fMZ-Wp_SL7_4yV4kGAUBIQbQwAjI\",\n  authDomain: \"haiku-5f030.firebaseapp.com\",\n  projectId: \"haiku-5f030\",\n  storageBucket: \"haiku-5f030.appspot.com\",\n  messagingSenderId: \"36175715920\",\n  appId: \"1:36175715920:web:eef8a1f494e5c3b5293b55\",\n  measurementId: \"G-T6VNN18VMM\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 6\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 5\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 6\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 4\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Comment\",\n        component: CommentScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["C:/Users/adula/Documents/GitHub/haiku/frontend/App.js"],"names":["StatusBar","React","Component","firebase","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","LoginScreen","MainScreen","AddScreen","SaveScreen","CommentScreen","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown","navigation"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,IAAMC,KAAK,GAAGJ,WAAW,CAACE,WAAD,EAAcD,eAAe,CAACE,KAAD,CAA7B,CAAzB;AAIA,IAAME,cAAc,GAAG;AACtBC,EAAAA,MAAM,EAAE,yCADc;AAEtBC,EAAAA,UAAU,EAAE,6BAFU;AAGtBC,EAAAA,SAAS,EAAE,aAHW;AAItBC,EAAAA,aAAa,EAAE,yBAJO;AAKtBC,EAAAA,iBAAiB,EAAE,aALG;AAMtBC,EAAAA,KAAK,EAAE,0CANe;AAOtBC,EAAAA,aAAa,EAAE;AAPO,CAAvB;;AAWA,IAAIvB,QAAQ,CAACwB,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC/BzB,EAAAA,QAAQ,CAAC0B,aAAT,CAAwBV,cAAxB;AACA;;AAED,IAAMW,KAAK,GAAGzB,oBAAoB,EAAlC;AAEA,WAAa0B,GAAb;AAAA;;AAAA;;AACC,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAC;AADK,KAAb;AAFiB;AAKjB;;AANF;AAAA;AAAA,wCAQoB;AAAA;;AAClB/B,MAAAA,QAAQ,CAACgC,IAAT,GAAgBC,kBAAhB,CAAoC,UAACC,IAAD,EAAQ;AAC3C,YAAG,CAACA,IAAJ,EAAS;AACR,UAAA,MAAI,CAACC,QAAL,CAAc;AACbC,YAAAA,QAAQ,EAAC,KADI;AAEbL,YAAAA,MAAM,EAAC;AAFM,WAAd;AAIA,SALD,MAKM;AACL,UAAA,MAAI,CAACI,QAAL,CAAc;AACbC,YAAAA,QAAQ,EAAC,IADI;AAEbL,YAAAA,MAAM,EAAC;AAFM,WAAd;AAIA;AACD,OAZD;AAaA;AAtBF;AAAA;AAAA,6BAwBU;AAAA,wBACqB,KAAKD,KAD1B;AAAA,UACAM,QADA,eACAA,QADA;AAAA,UACUL,MADV,eACUA,MADV;;AAER,UAAG,CAACA,MAAJ,EAAW;AACV,eACC,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEM,YAAAA,IAAI,EAAC,CAAP;AAAUC,YAAAA,cAAc,EAAC;AAAzB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,CADD;AAKA;;AAED,UAAG,CAACF,QAAJ,EAAa;AACZ,eACC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,KAAD,CAAO,SAAP;AAAiB,UAAA,gBAAgB,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,SAAnB;AAA6B,UAAA,SAAS,EAAGjC,aAAzC;AAAyD,UAAA,OAAO,EAAE;AAAEoC,YAAAA,WAAW,EAAC;AAAd,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAGnC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,EAGC,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAGC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHD,CADD,CADD;AASA;;AAED,aACC,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAGU,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAGT,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,KAAnB;AAAyB,QAAA,SAAS,EAAGC,SAArC;AAAiD,QAAA,UAAU,EAAG,KAAKsB,KAAL,CAAWW,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAGhC,UAAtC;AAAmD,QAAA,UAAU,EAAG,KAAKqB,KAAL,CAAWW,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,EAIC,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAG/B,aAAzC;AAAyD,QAAA,UAAU,EAAG,KAAKoB,KAAL,CAAWW,UAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,CAFD,CADD,CADD;AAcA;AA5DF;;AAAA;AAAA,EAAyBzC,SAAzB;AA+DA,eAAe6B,GAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\n\r\nimport { View, Text } from 'react-native'\r\nimport * as firebase from 'firebase'\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport LandingScreen from './components/auth/Landing'\r\nimport RegisterScreen from './components/auth/Register'\r\nimport LoginScreen from './components/auth/Login'\r\nimport MainScreen from './components/Main'\r\nimport AddScreen from './components/main/Add'\r\nimport SaveScreen from './components/main/Save'\r\nimport CommentScreen from './components/main/Comment'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './redux/reducers'\r\nimport thunk from 'redux-thunk'\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// Should be environmental variables in order to hide (Not implemented)\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyCQ8_8fMZ-Wp_SL7_4yV4kGAUBIQbQwAjI\",\r\n\tauthDomain: \"haiku-5f030.firebaseapp.com\",\r\n\tprojectId: \"haiku-5f030\",\r\n\tstorageBucket: \"haiku-5f030.appspot.com\",\r\n\tmessagingSenderId: \"36175715920\",\r\n\tappId: \"1:36175715920:web:eef8a1f494e5c3b5293b55\",\r\n\tmeasurementId: \"G-T6VNN18VMM\"\r\n};\r\n\r\n// Check to see if more than 1 firebase app is open (mulitple will cause crash)\r\nif( firebase.apps.length === 0 ){ \r\n\tfirebase.initializeApp( firebaseConfig)\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport class App extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tloaded:false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfirebase.auth().onAuthStateChanged( (user)=>{\r\n\t\t\tif(!user){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloggedIn:false,\r\n\t\t\t\t\tloaded:true,\r\n\t\t\t\t})\r\n\t\t\t}else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloggedIn:true,\r\n\t\t\t\t\tloaded:true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} )\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { loggedIn, loaded } = this.state;\r\n\t\tif(!loaded){\r\n\t\t\treturn(\r\n\t\t\t\t<View style={{ flex:1, justifyContent:'center'}}>\r\n\t\t\t\t\t<Text>Loading</Text>\r\n\t\t\t\t</View>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif(!loggedIn){\r\n\t\t\treturn (\r\n\t\t\t\t<NavigationContainer>\r\n\t\t\t\t\t<Stack.Navigator initialRouteName=\"Landing\">\r\n\t\t\t\t\t\t<Stack.Screen name=\"Landing\" component={ LandingScreen } options={{ headerShown:false }}/>\t\r\n\t\t\t\t\t\t<Stack.Screen name=\"Register\" component={ RegisterScreen }/>\r\n\t\t\t\t\t\t<Stack.Screen name=\"Login\" component={ LoginScreen }/>\t\r\n\t\t\t\t\t</Stack.Navigator>\r\n\t\t\t\t</NavigationContainer>\r\n\t\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<Provider store={ store }>\r\n\t\t\t\t<NavigationContainer>\r\n\r\n\t\t\t\t\t<Stack.Navigator initialRouteName=\"Main\">\r\n\t\t\t\t\t\t<Stack.Screen name=\"Main\" component={ MainScreen } />\r\n\t\t\t\t\t\t<Stack.Screen name=\"Add\" component={ AddScreen } navigation={ this.props.navigation } />\r\n\t\t\t\t\t\t<Stack.Screen name=\"Save\" component={ SaveScreen } navigation={ this.props.navigation } />\r\n\t\t\t\t\t\t<Stack.Screen name=\"Comment\" component={ CommentScreen } navigation={ this.props.navigation } />\r\n\t\t\t\t\t</Stack.Navigator>\r\n\r\n\t\t\t\t</NavigationContainer>\r\n\t\t\t</Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}